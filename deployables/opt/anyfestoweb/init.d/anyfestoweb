#! /bin/sh
# /etc/init.d/ANYFESTO

### BEGIN INIT INFO
# Provides:          anyfestoweb
# Required-Start:    $all
# Required-Stop:     $network $local_fs
# Default-Start:     2 3 4 5
# Default-Stop:      6 1 0
# Short-Description: All services around ANYFESTO
# Description:       Based on /opt/anyfestoweb/conf/anyfesto.conf starts:  * DNSMASQ * HOSTAPD * DROOPY * WLAN-config 
### END INIT INFO

###  
#  Default start-stop script for ANYFESTO services on a laptop
#   written by Matthias Strubel  (matthias.strubel@aod-rpg.de) 2011-02-22 
#  licenced by gpl, feel free to improve and send me comments
#  moded by tom higgins for anyfesto

. /lib/lsb/init-functions


[ -f /etc/default/rcS ] && . /etc/default/rcS

# PATH for /opt ANYFESTO folder
PATH=/bin:/usr/bin:/sbin:/usr/sbin:/usr/local/bin/:/usr/local/sbin:/opt/anyfestoweb/bin

PIDFILE_DROOPY=/var/run/anyfesto_droopy.pid
PIDFILE_HOSTAPN=/var/run/anyfesto_hostapn.pid
PIDFILE_DNSMASQ=/var/run/anyfesto_dnsmasq.pid
PIDFILE_LIGHTTPD=/opt/anyfestoweb/tmp/lighttpd.pid

ANYFESTO=/opt/anyfestoweb
CONF=$ANYFESTO/conf/anyfesto.conf
CONF_APN=$ANYFESTO/conf/hostapd.conf

#Some extra config files for dnsmasq
CONF_DNSMASQ=$ANYFESTO/conf/dnsmasq_generated.conf

CONF_LIGHTTPD=$ANYFESTO/conf/lighttpd/lighttpd.conf

export PYTHONPATH=:$PYTHONPATH:$ANYFESTO_PYTHONPATH


# Some things that run always
touch /var/lock/anyfesto

if [ -f $CONF ] ; then
   . $CONF 
else 
   log_failure_msg "Configuration file not found"
   exit 1
fi

# Do basic initialization on non-openWRT Systems, too
if [ -f $ANYFESTO/conf/init_done ] ; then
   INIT=OK
else
   $ANYFESTO/bin/hooks/hook_pre_init.sh  "$CONF"  
   $ANYFESTO/bin/install_anyfesto.sh "$CONF" part2
   $ANYFESTO/bin/hooks/hook_post_init.sh  "$CONF"
   touch $ANYFESTO/conf/init_done
fi

# Command Line for DNSMASQ,  use extra config file generated from command above
CMD_DNSMASQ="-x $PIDFILE_DNSMASQ -C $CONF_DNSMASQ "

# Carry out specific functions when asked to by the system
case "$1" in
  start)
    log_daemon_msg "Starting script ANYFESTO "
    echo ""

    # Generate hosts & dnsmasq file
    $ANYFESTO/bin/generate_config_files.sh  "$CONF"
    
    $ANYFESTO/bin/hooks/hook_anyfesto_start.sh  "$CONF"

    echo "Empty tmp folder"
    find   $ANYFESTO/tmp/  -exec rm {} \;

    if [ "$DO_IW" = "yes" ] ; then
       log_daemon_msg " Setting up Interface (iw) "
       iw $PHY_IF interface add $INTERFACE type managed
    fi

    if [ "$PROBE_INTERFACE" = yes ] ; then
      log_daemon_msg "  Probing wlan"
      #Setting up WLAN Interface
      ANYFESTO_setup_wlan.sh  $CONF probe
    fi
     if  [ $? -ne 0 ] ;  then
       log_failure_msg "failed probe Interface"
     else

       # Only  activate
       if  [ "$USE_APN" =  "yes" ] ;  then
         log_daemon_msg  "Starting hostap... "
         start-stop-daemon -m --start --background --pidfile $PIDFILE_HOSTAPN  --exec /usr/sbin/hostapd --  $CONF_APN
         log_end_msg $?
       fi

      if [ "$DO_IFCONFIG" = yes ] ; then
	log_daemon_msg "  Setting up wlan"
        #Setting up WLAN Interface
        anyfesto_setup_wlan.sh  $CONF start
        if  [ $? -ne 0 ] ;  then
          log_failure_msg "failed setting up Interface"
	  exit 99
        fi
      fi

      #BRIDGE
      if [ "$DO_BRIDGE" = "yes"  ] ; then
         log_daemon_msg  "Adding $INTERFACE to bridge $BRIDGE //  brctl addif $BRIDGE  $INTERFACE "
         sleep 1
         BR_CMD="brctl addif  $BRIDGE  $INTERFACE"
         ( $BR_CMD ; )
         log_end_msg $?
      fi

       if [ "$USE_DNSMASQ" = "yes" ] ;  then
         log_daemon_msg  "Starting dnsmasq... "
   # pidfile is written by dnsmasq
         start-stop-daemon --start --quiet --exec /usr/sbin/dnsmasq  --  $CMD_DNSMASQ  
         log_end_msg $?
       fi


        if [ "$DROOPY_ENABLED" = "yes" ] ; then
          #Start here the anyfesto-Parts droopy i.e.
          #Delete 0 Byte Files
          delete_empty.sh  $UPLOADFOLDER
          find  $UPLOADFOLDER/ -iname tmp\* -exec rm {} \;

          DROOPY_USER=""
          if [ "$DROOPY_USE_USER" = "yes" ] ; then
            DROOPY_USER=" -c $LIGHTTPD_USER:$LIGHTTPD_GROUP "
          fi
          log_daemon_msg "Starting droopy..."
          start-stop-daemon $DROOPY_USER -m --start --background  --pidfile $PIDFILE_DROOPY --exec $ANYFESTO/bin/droopy -- -H $HOST -d $UPLOADFOLDER -c "" -m "$DROOPY_TXT" $DROOPY_USERDIR  $DROOPY_PORT
          log_end_msg $?
       fi



       #Start here the lighttpd i.e.
       log_daemon_msg "Starting lighttpd..."
       start-stop-daemon --start --quiet  --pidfile $PIDFILE_LIGHTTPD --exec /usr/sbin/lighttpd -- -f $CONF_LIGHTTPD
       log_end_msg $?

     fi

     $ANYFESTO/bin/hooks/hook_anyfesto_start_done.sh  "$CONF"

    ;;
  stop)
    log_daemon_msg  "Stopping script anyfesto"
    echo ""

     $ANYFESTO/bin/hooks/hook_anyfesto_stop.sh  "$CONF"

    if [  "$USE_APN"  = "yes" ] ;  then
       log_daemon_msg  "Stopping hostap... "
       start-stop-daemon --stop --quiet  --pidfile $PIDFILE_HOSTAPN  --oknodo  --startas "hostapd"
       log_end_msg  $?
    fi
    if [ "$USE_DNSMASQ" = "yes" ] ;  then 
       log_daemon_msg "Stopping dnsmasq..."
       start-stop-daemon --stop --quiet  --pidfile $PIDFILE_DNSMASQ  
       log_end_msg $?
    fi


    log_daemon_msg "Stopping lighttpd..."
    start-stop-daemon --stop --retry 30 --quiet --pidfile $PIDFILE_LIGHTTPD
    log_end_msg $?

    if [ "$DROOPY_ENABLED" = "yes" ] ; then
       #Kill Droopy
       log_daemon_msg "Stopping droopy... "
       start-stop-daemon --stop --quiet --pidfile  $PIDFILE_DROOPY --oknodo  --startas "python /opt/anyfestoweb/bin/droopy"
       log_end_msg $?
    fi

     if [ "$DO_IFCONFIG" = yes ] ; then
       ANYFESTO_setup_wlan.sh $CONF stop
     fi

     if [ "$DO_IW" = "yes" ] ; then
        iw dev $INTERFACE del
     fi

     # REMOVE BRIDGE
     if [ "$DO_BRIDGE" = "yes"  ] ; then
         log_daemon_msg "Remove Bridge..."
         BR_CMD="brctl delif  $BRIDGE  $INTERFACE"
         ( $BR_CMD ; )
         log_end_msg $?
     fi

      $ANYFESTO/bin/hooks/hook_ANYFESTO_stop_done.sh  "$CONF"


    ;;
  *)
    echo "Usage: /etc/init.d/anyfestoweb {start|stop}"
    exit 1
    ;;
esac

exit 0
